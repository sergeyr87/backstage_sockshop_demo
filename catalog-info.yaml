apiVersion: backstage.io/v1alpha1
kind: System
metadata:
  name: sock-shop
  title: Sock Shop E-commerce Platform
  description: A microservices-based e-commerce application for selling socks
  annotations:
    backstage.io/kubernetes-namespace: sock-shop
    backstage.io/kubernetes-label-selector: 'app.kubernetes.io/part-of=sock-shop'
spec:
  owner: platform-team
  domain: e-commerce
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: front-end
  title: Frontend Service
  description: Web frontend for the sock shop application
  annotations:
    backstage.io/kubernetes-id: front-end
    backstage.io/kubernetes-namespace: sock-shop
    prometheus.io/scrape: 'true'
  tags:
    - frontend
    - web
    - nodejs
  links:
    - url: http://your-cluster-ip:30001
      title: Frontend Application
      icon: web
spec:
  type: website
  lifecycle: production
  owner: frontend-team
  system: sock-shop
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: carts
  title: Shopping Cart Service
  description: Manages user shopping carts
  annotations:
    backstage.io/kubernetes-id: carts
    backstage.io/kubernetes-namespace: sock-shop
    prometheus.io/scrape: 'true'
  tags:
    - microservice
    - java
    - spring-boot
spec:
  type: service
  lifecycle: production
  owner: backend-team
  system: sock-shop
  dependsOn:
    - component:carts-db
  providesApis:
    - carts-api
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: carts-db
  title: Carts Database
  description: MongoDB database for shopping cart data
  annotations:
    backstage.io/kubernetes-id: carts-db
    backstage.io/kubernetes-namespace: sock-shop
  tags:
    - database
    - mongodb
spec:
  type: database
  lifecycle: production
  owner: backend-team
  system: sock-shop
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: catalogue
  title: Product Catalogue Service
  description: Manages product catalog and inventory
  annotations:
    backstage.io/kubernetes-id: catalogue
    backstage.io/kubernetes-namespace: sock-shop
    prometheus.io/scrape: 'true'
  tags:
    - microservice
    - go
spec:
  type: service
  lifecycle: production
  owner: backend-team
  system: sock-shop
  dependsOn:
    - component:catalogue-db
  providesApis:
    - catalogue-api
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: catalogue-db
  title: Catalogue Database
  description: MySQL database for product catalog data
  annotations:
    backstage.io/kubernetes-id: catalogue-db
    backstage.io/kubernetes-namespace: sock-shop
  tags:
    - database
    - mysql
spec:
  type: database
  lifecycle: production
  owner: backend-team
  system: sock-shop
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: orders
  title: Order Processing Service
  description: Handles order creation and processing
  annotations:
    backstage.io/kubernetes-id: orders
    backstage.io/kubernetes-namespace: sock-shop
    prometheus.io/scrape: 'true'
  tags:
    - microservice
    - java
    - spring-boot
spec:
  type: service
  lifecycle: production
  owner: backend-team
  system: sock-shop
  dependsOn:
    - component:orders-db
  providesApis:
    - orders-api
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: orders-db
  title: Orders Database
  description: MongoDB database for order data
  annotations:
    backstage.io/kubernetes-id: orders-db
    backstage.io/kubernetes-namespace: sock-shop
  tags:
    - database
    - mongodb
spec:
  type: database
  lifecycle: production
  owner: backend-team
  system: sock-shop
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: payment
  title: Payment Service
  description: Processes payments for orders
  annotations:
    backstage.io/kubernetes-id: payment
    backstage.io/kubernetes-namespace: sock-shop
    prometheus.io/scrape: 'true'
  tags:
    - microservice
    - go
    - payment
spec:
  type: service
  lifecycle: production
  owner: backend-team
  system: sock-shop
  providesApis:
    - payment-api
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: shipping
  title: Shipping Service
  description: Manages shipping and delivery
  annotations:
    backstage.io/kubernetes-id: shipping
    backstage.io/kubernetes-namespace: sock-shop
    prometheus.io/scrape: 'true'
  tags:
    - microservice
    - java
    - spring-boot
spec:
  type: service
  lifecycle: production
  owner: backend-team
  system: sock-shop
  providesApis:
    - shipping-api
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: user
  title: User Management Service
  description: Handles user registration, authentication, and profiles
  annotations:
    backstage.io/kubernetes-id: user
    backstage.io/kubernetes-namespace: sock-shop
    prometheus.io/scrape: 'true'
  tags:
    - microservice
    - go
    - authentication
spec:
  type: service
  lifecycle: production
  owner: backend-team
  system: sock-shop
  dependsOn:
    - component:user-db
  providesApis:
    - user-api
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: user-db
  title: User Database
  description: MongoDB database for user data
  annotations:
    backstage.io/kubernetes-id: user-db
    backstage.io/kubernetes-namespace: sock-shop
  tags:
    - database
    - mongodb
spec:
  type: database
  lifecycle: production
  owner: backend-team
  system: sock-shop
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: queue-master
  title: Queue Master Service
  description: Manages message queuing for order processing
  annotations:
    backstage.io/kubernetes-id: queue-master
    backstage.io/kubernetes-namespace: sock-shop
    prometheus.io/scrape: 'true'
  tags:
    - microservice
    - java
    - spring-boot
    - messaging
spec:
  type: service
  lifecycle: production
  owner: backend-team
  system: sock-shop
  dependsOn:
    - component:rabbitmq
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: rabbitmq
  title: RabbitMQ Message Broker
  description: Message broker for asynchronous communication
  annotations:
    backstage.io/kubernetes-id: rabbitmq
    backstage.io/kubernetes-namespace: sock-shop
    prometheus.io/scrape: 'true'
    prometheus.io/port: '9090'
  tags:
    - messaging
    - rabbitmq
    - infrastructure
spec:
  type: infrastructure
  lifecycle: production
  owner: platform-team
  system: sock-shop
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: session-db
  title: Session Database
  description: Redis database for session storage
  annotations:
    backstage.io/kubernetes-id: session-db
    backstage.io/kubernetes-namespace: sock-shop
  tags:
    - database
    - redis
    - session-storage
spec:
  type: database
  lifecycle: production
  owner: platform-team
  system: sock-shop
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: carts-api
  title: Carts API
  description: HTTP API for cart management
spec:
  type: openapi
  lifecycle: production
  owner: backend-team
  system: sock-shop
  definition: |
    openapi: 3.0.0
    info:
      title: Carts API
      version: 1.0.0
      description: API for managing shopping carts
    paths:
      /carts:
        get:
          summary: Get all carts
          responses:
            '200':
              description: List of carts
      /carts/{id}:
        get:
          summary: Get cart by ID
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: string
          responses:
            '200':
              description: Cart details
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: catalogue-api
  title: Catalogue API
  description: HTTP API for product catalog
spec:
  type: openapi
  lifecycle: production
  owner: backend-team
  system: sock-shop
  definition: |
    openapi: 3.0.0
    info:
      title: Catalogue API
      version: 1.0.0
      description: API for product catalog management
    paths:
      /catalogue:
        get:
          summary: Get all products
          responses:
            '200':
              description: List of products
      /catalogue/{id}:
        get:
          summary: Get product by ID
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: string
          responses:
            '200':
              description: Product details
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: orders-api
  title: Orders API
  description: HTTP API for order processing
spec:
  type: openapi
  lifecycle: production
  owner: backend-team
  system: sock-shop
  definition: |
    openapi: 3.0.0
    info:
      title: Orders API
      version: 1.0.0
      description: API for order processing and management
    paths:
      /orders:
        get:
          summary: Get all orders
          responses:
            '200':
              description: List of orders
        post:
          summary: Create new order
          responses:
            '201':
              description: Order created
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: payment-api
  title: Payment API
  description: HTTP API for payment processing
spec:
  type: openapi
  lifecycle: production
  owner: backend-team
  system: sock-shop
  definition: |
    openapi: 3.0.0
    info:
      title: Payment API
      version: 1.0.0
      description: API for payment processing
    paths:
      /paymentAuth:
        post:
          summary: Authorize payment
          responses:
            '200':
              description: Payment authorized
      /health:
        get:
          summary: Health check
          responses:
            '200':
              description: Service healthy
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: shipping-api
  title: Shipping API
  description: HTTP API for shipping management
spec:
  type: openapi
  lifecycle: production
  owner: backend-team
  system: sock-shop
  definition: |
    openapi: 3.0.0
    info:
      title: Shipping API
      version: 1.0.0
      description: API for shipping and delivery management
    paths:
      /shipping:
        post:
          summary: Calculate shipping cost
          responses:
            '200':
              description: Shipping cost calculated
      /health:
        get:
          summary: Health check
          responses:
            '200':
              description: Service healthy
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: user-api
  title: User API
  description: HTTP API for user management
spec:
  type: openapi
  lifecycle: production
  owner: backend-team
  system: sock-shop
  definition: |
    openapi: 3.0.0
    info:
      title: User API
      version: 1.0.0
      description: API for user management and authentication
    paths:
      /register:
        post:
          summary: Register new user
          responses:
            '200':
              description: User registered
      /login:
        get:
          summary: User login
          responses:
            '200':
              description: Login successful
      /customers:
        get:
          summary: Get all customers
          responses:
            '200':
              description: List of customers


# Add these Kubernetes resources to your existing catalog-info.yaml

---
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: sock-shop-namespace
  title: Sock Shop Namespace
  description: Kubernetes namespace for the sock shop application
  annotations:
    backstage.io/kubernetes-id: sock-shop
    backstage.io/kubernetes-namespace: sock-shop
  tags:
    - kubernetes
    - namespace
spec:
  type: kubernetes-namespace
  lifecycle: production
  owner: platform-team
  system: sock-shop

---
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: carts-deployment
  title: Carts Deployment
  description: Kubernetes deployment for the carts service
  annotations:
    backstage.io/kubernetes-id: carts
    backstage.io/kubernetes-namespace: sock-shop
    backstage.io/kubernetes-label-selector: 'name=carts'
  tags:
    - kubernetes
    - deployment
spec:
  type: kubernetes-deployment
  lifecycle: production
  owner: backend-team
  system: sock-shop
  dependsOn:
    - component:carts

---
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: carts-service
  title: Carts Service
  description: Kubernetes service for the carts application
  annotations:
    backstage.io/kubernetes-id: carts
    backstage.io/kubernetes-namespace: sock-shop
    backstage.io/kubernetes-label-selector: 'name=carts'
  tags:
    - kubernetes
    - service
spec:
  type: kubernetes-service
  lifecycle: production
  owner: backend-team
  system: sock-shop
  dependsOn:
    - resource:carts-deployment

---
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: catalogue-deployment
  title: Catalogue Deployment
  description: Kubernetes deployment for the catalogue service
  annotations:
    backstage.io/kubernetes-id: catalogue
    backstage.io/kubernetes-namespace: sock-shop
    backstage.io/kubernetes-label-selector: 'name=catalogue'
  tags:
    - kubernetes
    - deployment
spec:
  type: kubernetes-deployment
  lifecycle: production
  owner: backend-team
  system: sock-shop
  dependsOn:
    - component:catalogue

---
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: catalogue-service
  title: Catalogue Service
  description: Kubernetes service for the catalogue application
  annotations:
    backstage.io/kubernetes-id: catalogue
    backstage.io/kubernetes-namespace: sock-shop
    backstage.io/kubernetes-label-selector: 'name=catalogue'
  tags:
    - kubernetes
    - service
spec:
  type: kubernetes-service
  lifecycle: production
  owner: backend-team
  system: sock-shop
  dependsOn:
    - resource:catalogue-deployment

---
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: front-end-deployment
  title: Frontend Deployment
  description: Kubernetes deployment for the frontend service
  annotations:
    backstage.io/kubernetes-id: front-end
    backstage.io/kubernetes-namespace: sock-shop
    backstage.io/kubernetes-label-selector: 'name=front-end'
  tags:
    - kubernetes
    - deployment
spec:
  type: kubernetes-deployment
  lifecycle: production
  owner: frontend-team
  system: sock-shop
  dependsOn:
    - component:front-end

---
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: front-end-service
  title: Frontend Service
  description: Kubernetes NodePort service for the frontend application
  annotations:
    backstage.io/kubernetes-id: front-end
    backstage.io/kubernetes-namespace: sock-shop
    backstage.io/kubernetes-label-selector: 'name=front-end'
  tags:
    - kubernetes
    - service
    - nodeport
spec:
  type: kubernetes-service
  lifecycle: production
  owner: frontend-team
  system: sock-shop
  dependsOn:
    - resource:front-end-deployment

---
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: orders-deployment
  title: Orders Deployment
  description: Kubernetes deployment for the orders service
  annotations:
    backstage.io/kubernetes-id: orders
    backstage.io/kubernetes-namespace: sock-shop
    backstage.io/kubernetes-label-selector: 'name=orders'
  tags:
    - kubernetes
    - deployment
spec:
  type: kubernetes-deployment
  lifecycle: production
  owner: backend-team
  system: sock-shop
  dependsOn:
    - component:orders

---
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: payment-deployment
  title: Payment Deployment
  description: Kubernetes deployment for the payment service
  annotations:
    backstage.io/kubernetes-id: payment
    backstage.io/kubernetes-namespace: sock-shop
    backstage.io/kubernetes-label-selector: 'name=payment'
  tags:
    - kubernetes
    - deployment
spec:
  type: kubernetes-deployment
  lifecycle: production
  owner: backend-team
  system: sock-shop
  dependsOn:
    - component:payment

---
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: shipping-deployment
  title: Shipping Deployment
  description: Kubernetes deployment for the shipping service
  annotations:
    backstage.io/kubernetes-id: shipping
    backstage.io/kubernetes-namespace: sock-shop
    backstage.io/kubernetes-label-selector: 'name=shipping'
  tags:
    - kubernetes
    - deployment
spec:
  type: kubernetes-deployment
  lifecycle: production
  owner: backend-team
  system: sock-shop
  dependsOn:
    - component:shipping

---
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: user-deployment
  title: User Deployment
  description: Kubernetes deployment for the user service
  annotations:
    backstage.io/kubernetes-id: user
    backstage.io/kubernetes-namespace: sock-shop
    backstage.io/kubernetes-label-selector: 'name=user'
  tags:
    - kubernetes
    - deployment
spec:
  type: kubernetes-deployment
  lifecycle: production
  owner: backend-team
  system: sock-shop
  dependsOn:
    - component:user

---
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: rabbitmq-deployment
  title: RabbitMQ Deployment
  description: Kubernetes deployment for the RabbitMQ message broker
  annotations:
    backstage.io/kubernetes-id: rabbitmq
    backstage.io/kubernetes-namespace: sock-shop
    backstage.io/kubernetes-label-selector: 'name=rabbitmq'
  tags:
    - kubernetes
    - deployment
    - messaging
spec:
  type: kubernetes-deployment
  lifecycle: production
  owner: platform-team
  system: sock-shop
  dependsOn:
    - component:rabbitmq

---
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: sock-shop-cluster
  title: Sock Shop Kubernetes Cluster
  description: The Kubernetes cluster hosting the sock shop application
  annotations:
    backstage.io/kubernetes-cluster: sock-shop-cluster
  tags:
    - kubernetes
    - cluster
    - infrastructure
spec:
  type: kubernetes-cluster
  lifecycle: production
  owner: platform-team
  system: sock-shop              